

09. 협업 필터링이란? (collabrate filtering)
협업필터링 : 협동하여 필터를 거른다. 즉, 과반수의 의견으로 더 나은 추천을 한다.
cf) 집단지성 (collective intelligence)
개인보다 단체나 그룹의 선택과 취향에 의존하며, 여러 사람의 의견을 종합하여 반영한다.

협업필터링에는
이웃기반 협업필터링 ex) item-based와 user-based가 있다.
모델기반 협업필터링 ex) 딥러닝 협업필터링
하이브리드 협업필터링

ex) customers who bought this item also bought(다른 사람들이 산 유사한 상품) 등 다른 정보를 기반으로 추천함


10. 이웃기반 협업필터링 - user-based VS item-based. 중 무엇이 더 좋을까?

Neighborhood-based Collaborative Filtering (= Memory-based Collaborative Filtering)
즉, User-item 간의 평점 등 주어진 데이터로 새로운 아이템을 예측한다.
 특징은 구현이 간단하며, model-based cf에 비해 계산량이 매우 적다. 또한, 새로운 user와 item이 추가되더라도 안정적이고, 새로운 content(user 또는 item)를 추천할 수 있다.


(1) User-based Collaborative Filtering
두 사용자가 얼마나 유사한 항목을 좋아했는지 바탕으로 추천. 취향이 비슷한 사용자끼리 데이터를 바탕으로 추천한다. 사용자 기반 플랫폼 시스템에서 유리함.
ex) SNS 친구 추천 등

(2) item-based Collaborative Filtering
아이템과 아이템 사이의 유사도 계산. 과거 아이템 선호도 데이터를 기반으로 선호 연관성이 높은 다른 데이터를 추천한다.
ex) 아마존, 넷플릭스 등에서 많이 활용한다.


(3) (1)과 (2) 차이
(3-1) 정확도 : 사용자 데이터가 아이템 데이터보다 많은 경우, item-based를 사용하는 것이 좋음 (분류를 최소화할 수 있음)
(3-2) 모델 robustness : 유저나 데이터가 많이 바뀌는가에 따라 다름. 아이템 수가 크게 변하지 않는다면, item-based를 추천한다.
(3-3) 설명력 : item-based는 비슷한 item과 가중치로 함께 설명 가능하다. 반면, user-based는 특정 user와 비슷한 user로 분류된 user의 실제 취향을 알기 어렵다.
(3-4) 새로운 추천 가능 : item-based는 과거 아이템 데이터에 의존하기 때문에 추천이 어려움. 반면, user-based는 여러 유저의 데이터를 보기 때문에 새로운 추천이 가능함.


(4) (1)과 (2)의 문제점
(4-1) cold-start 문제. 딥러닝 기반의 추천 알고리즘이다. 데이터가 충분하지 않다면, 좋은 추천이 어렵다.
(4-2) 계산량 : 데이터가 많아지면 좋은 추천이 가능하지만, 유사도 계산이 많아진다.
(4-3) Long-Tail Economy : 모델 기반 협업필터링. 대부분의 사용자가 관심 갖는 소수 아이템으로 쏠린 현상. 관심이 상대적으로 부족한 아이템은 추천되지 못한다.


11. 이웃기반 협업필터링 - 또 다른 유사도 이해하기

(1) 자카드 유사도 (Jaccard Similarity)
집합의 개념을 이용한 유사도 계산.
ex) 집합 A와 B 사이의 유사도는 얼마나 많은 아이템이 겹치는지 판단한다. 공통 아이템이 없으면 0, 모두 겹치면 1이다.
보통, 여러 단어로 구성된 등 문서 또는 문장이 유사한지 판단할 때 사용한다.

J(A, B) = A와 B의 교집합 / A와 B의 합집합


(2) 피어슨 유사도 (Pearson Similarity)
Vector X, Y 사이의 상관관계를 계산  (=피어슨 상관관계)
각 Vector의 표본평균으로 각 Vector를 정규화하고 코사인 유사도를 구한다.
1은 양의 상관관계, -1은 음의 상관관계, 0은 상관관계가 없다.


12. 이웃기반 협업필터링 - 구현하기



